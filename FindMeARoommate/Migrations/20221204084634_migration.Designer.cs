// <auto-generated />
using System;
using FindMeARoommate.Entities;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace FindMeARoommate.Migrations
{
    [DbContext(typeof(FindMeARoomateContext))]
    [Migration("20221204084634_migration")]
    partial class migration
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.11")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("FindMeARoommate.Entities.Announcement", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<DateTime>("PublishedDate")
                        .HasColumnType("datetime");

                    b.Property<int>("RoomId")
                        .HasColumnType("int");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.HasKey("Id");

                    b.ToTable("Announcements");
                });

            modelBuilder.Entity("FindMeARoommate.Entities.Application", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<int>("AnnouncementId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<DateTime>("ApplicationDate")
                        .HasColumnType("datetime");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<int>("StudentId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("AnnouncementId");

                    b.HasIndex("StudentId");

                    b.ToTable("Applications");
                });

            modelBuilder.Entity("FindMeARoommate.Entities.Dormitory", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<int>("MaxCapacity")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.HasKey("Id");

                    b.ToTable("Dormitories");
                });

            modelBuilder.Entity("FindMeARoommate.Entities.Room", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<int>("Capacity")
                        .HasColumnType("int");

                    b.Property<int>("DormitoryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.HasKey("Id");

                    b.HasIndex("DormitoryId");

                    b.ToTable("Rooms");
                });

            modelBuilder.Entity("FindMeARoommate.Entities.Student", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("Surname")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.HasKey("Id");

                    b.ToTable("Students");
                });

            modelBuilder.Entity("FindMeARoommate.Entities.StudentRoom", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<int>("RoomId")
                        .HasColumnType("int");

                    b.Property<int>("StudentId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("RoomId");

                    b.HasIndex("StudentId");

                    b.ToTable("StudentRooms");
                });

            modelBuilder.Entity("FindMeARoommate.Entities.Application", b =>
                {
                    b.HasOne("FindMeARoommate.Entities.Announcement", "Announcement")
                        .WithMany("Applications")
                        .HasForeignKey("AnnouncementId")
                        .IsRequired()
                        .HasConstraintName("FK_Applications_Announcements");

                    b.HasOne("FindMeARoommate.Entities.Student", "Student")
                        .WithMany("Applications")
                        .HasForeignKey("StudentId")
                        .IsRequired()
                        .HasConstraintName("FK_Applications_Students");

                    b.Navigation("Announcement");

                    b.Navigation("Student");
                });

            modelBuilder.Entity("FindMeARoommate.Entities.Room", b =>
                {
                    b.HasOne("FindMeARoommate.Entities.Dormitory", "Dormitory")
                        .WithMany("Rooms")
                        .HasForeignKey("DormitoryId")
                        .IsRequired()
                        .HasConstraintName("FK_Rooms_Dormitories");

                    b.Navigation("Dormitory");
                });

            modelBuilder.Entity("FindMeARoommate.Entities.StudentRoom", b =>
                {
                    b.HasOne("FindMeARoommate.Entities.Room", "Room")
                        .WithMany("StudentRooms")
                        .HasForeignKey("RoomId")
                        .IsRequired()
                        .HasConstraintName("FK_StudentRooms_Rooms");

                    b.HasOne("FindMeARoommate.Entities.Student", "Student")
                        .WithMany("StudentRooms")
                        .HasForeignKey("StudentId")
                        .IsRequired()
                        .HasConstraintName("FK_StudentRooms_Students");

                    b.Navigation("Room");

                    b.Navigation("Student");
                });

            modelBuilder.Entity("FindMeARoommate.Entities.Announcement", b =>
                {
                    b.Navigation("Applications");
                });

            modelBuilder.Entity("FindMeARoommate.Entities.Dormitory", b =>
                {
                    b.Navigation("Rooms");
                });

            modelBuilder.Entity("FindMeARoommate.Entities.Room", b =>
                {
                    b.Navigation("StudentRooms");
                });

            modelBuilder.Entity("FindMeARoommate.Entities.Student", b =>
                {
                    b.Navigation("Applications");

                    b.Navigation("StudentRooms");
                });
#pragma warning restore 612, 618
        }
    }
}
